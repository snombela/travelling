{"version":3,"sources":["components/Home.jsx","components/auth/Auth-service.jsx","components/auth/Signup.jsx","components/navbar/Navbar.jsx","components/auth/Login.jsx","components/Profile/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","AuthService","_this","this","Object","classCallCheck","signup","username","email","password","service","post","then","response","data","loggedin","get","login","logout","axios","create","baseURL","concat","process","API_URL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","_this$state","state","newUser","setState","objectSpread","user","changeUser","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","undefined","_this2","Redirect","to","onSubmit","type","onChange","e","Link","Navbar","componentWillReceiveProps","nextProps","loggedInUser","logoutUser","className","style","textDecoration","onClick","Login","userLogged","Profile","App","components_navbar_Navbar","Switch","Route","exact","path","component","render","auth_Signup","auth_Login","Profile_Profile","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8574f8d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        Estoy en la Home\n      </div>\n      )\n  }\n}\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.API_URL}/api/auth`, //cambiar por la variable de entorno `${process.env.API_URL}/api/auth`\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, email, password) => {\n      return this.service.post('/signup', {username, email, password})\n      .then(response => response.data)\n    }\n\n    loggedin = () => {\n      return this.service.get('/loggedin')\n      .then(response => response.data)\n    }\n\n    login = (email, password) => {\n      return this.service.post('/login', {email, password})\n      .then(response => response.data)\n    }\n\n    logout = () => {\n      return this.service.post('/logout')\n      .then(response => response.data)\n    }\n}\n\n\nexport default AuthService;\n","import React, { Component } from 'react';\nimport AuthService from './Auth-service';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      username: '',\n      email: '', \n      password: '', \n      user: undefined\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const {username, email, password} = this.state;\n    this.service.signup(username, email, password)\n    .then( newUser => {\n        this.setState({...this.state,\n            username: \"\", \n            email: \"\",\n            password: \"\",\n            user: newUser\n        });\n        this.props.changeUser(newUser)\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n\n  render(){\n    return !this.state.user?(\n        <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={this.state.email} onChange={e => this.handleChange(e)}></input>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"}> Login</Link>\n        </p>\n  \n      </div>\n    ): <Redirect to=\"/profile\"/>\n  }\n}\n\nexport default Signup;\n\n\n\n      \n  \n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../auth/Auth-service';\nimport '../navbar/Navbar.css'\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { loggedInUser: null};\n    this.service = new AuthService();\n  }\n  componentWillReceiveProps = nextProps => {\n    this.setState({...this.state, loggedInUser:nextProps[\"user\"]})\n  }\n  \n  logoutUser = () =>{\n    this.service.logout()\n    .then(() => {\n      this.setState({ loggedInUser: null });\n      this.props.changeUser(null)\n    })\n  }\n  render(){\n    return(\n      <nav className=\"nav\">\n        <ul>\n          <li className={this.state.loggedInUser?'ocultar':'mostrar'}><Link to='/login' style={{ textDecoration: 'none' }}>Login</Link></li>\n          <li className={this.state.loggedInUser?'ocultar':'mostrar'}><Link to='/signup' style={{ textDecoration: 'none' }}>Signup</Link></li>\n          <li className={this.state.loggedInUser?'mostrar':'ocultar'} >\n            <Link to='/'>\n              <button onClick={() => this.logoutUser()}>Logout</button>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    )\n      \n  }\n\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport AuthService from './Auth-service';\nimport { Link, Redirect} from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      username: '',\n      email: '', \n      password: '', \n      user: undefined};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    console.log(this.props)\n    event.preventDefault();\n    const {email, password}= this.state;\n    this.service.login(email, password)\n    .then( userLogged => {\n        this.setState({...this.state,\n          email:\"\",\n          password: \"\",\n          user: userLogged\n        });\n        this.props.changeUser(userLogged)\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    return !this.state.user?(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account? \n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    ): <Redirect to=\"/profile\"/>\n  }\n}\n\nexport default Login;","import React, { Component } from 'react'\nimport AuthService from '../auth/Auth-service';\n// import { Redirect } from 'react-router-dom';\n\n\nexport default class Profile extends Component {\n  constructor(props){\n    super(props);\n    this.state = {loggedInUser: null};\n    this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    this.service.loggedin().then(user => {\n      console.log(user)\n      this.props.changeUser(user)\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"user\"] });\n  }\n\n  render() {\n    console.log(this.props.loggedInUser)\n    if (this.props.loggedInUser!==null){\n    return (\n      <div>\n        <p>Estoy en mi perfil{this.props.loggedInUser}</p>\n      </div>\n    ) } else {\n      return (\n        <div>No estoy logueado</div>\n      )\n    }\n    // <Redirect to=\"/login\"/>\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from './components/Home';\nimport Signup from './components/auth/Signup';\nimport Navbar from './components/navbar/Navbar';\nimport Login from './components/auth/Login';\nimport Profile from './components/Profile/Profile';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null ,user:null};\n  }\n  changeUser = user => {\n    this.setState({...this.state, user, loggedInUser:true})\n  }\n  render() {\n    const { loggedInUser } = this.state\n    return(\n      <div className=\"App\">\n        <Navbar changeUser={this.changeUser} user={this.state.user}/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path='/signup' render={() => <Signup changeUser={this.changeUser}/>}/>\n          <Route exact path='/login'  render={() => <Login changeUser={this.changeUser}/>}/>\n          <Route exact path='/profile' render={() => <Profile changeUser={this.changeUser} loggedInUser={loggedInUser}/>}/>\n        </Switch>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render((\n<Router>\n    <App />\n</Router>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}